{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","helpers.js","App.js","reportWebVitals.js","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","onClick","borderRadius","height","width","margin","display","gridTemplate","Board","squares","map","square","i","Game","useState","Array","fill","board","setBoard","xIsNext","setXIsNext","winner","lines","length","a","b","c","calculateWinner","slice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAEMA,EAAQ,CACVC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QASEC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,QAAV,OACX,wBAAQT,MAAOA,EAAOS,QAASA,EAA/B,SACKD,KCVHR,EAAQ,CACVE,OAAQ,qBACRQ,aAAc,OACdC,OAAQ,QACRC,MAAO,QACPC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAaHC,EAVD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASR,EAAZ,EAAYA,QAAZ,OACV,qBAAKT,MAAOA,EAAZ,SAEQiB,EAAQC,KAAI,SAACC,EAAQC,GAAT,OACR,cAAC,EAAD,CAAgBZ,MAAOW,EAAQV,QAAS,kBAAMA,EAAQW,KAAzCA,SCb7B,IAAMpB,EAAQ,CACVY,MAAO,QACPC,OAAQ,aAqCGQ,EAlCF,WACT,MAA0BC,mBAASC,MAAM,GAAGC,KAAK,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACMC,ECZH,SAAyBZ,GAW5B,IAVA,IAAMa,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEFV,EAAI,EAAGA,EAAIU,EAAMC,OAAQX,IAAK,CACnC,kBAAkBU,EAAMV,GAAxB,GAAOY,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIjB,EAAQe,IAAMf,EAAQe,KAAOf,EAAQgB,IAAMhB,EAAQe,KAAOf,EAAQiB,GAClE,OAAOjB,EAAQe,GAGvB,OAAO,KDLQG,CAAgBV,GAoB/B,OACI,qCACI,cAAC,EAAD,CAAOR,QAASQ,EAAOhB,QApBX,SAACW,GACbS,GAAUJ,EAAML,KAEpBM,EAAS,GAAD,mBACDD,EAAMW,MAAM,EAAGhB,IADd,CAEJO,EAAU,IAAM,KAFZ,YAGDF,EAAMW,MAAMhB,EAAI,MAGvBQ,GAAYD,OAYR,sBAAK3B,MAAOA,EAAZ,UACI,4BAAI6B,EAAS,WAAaA,EAAS,iBAAmBF,EAAU,IAAM,OAT9E,wBAAQlB,QAAS,kBAAMiB,EAASH,MAAM,GAAGC,KAAK,QAA9C,+BEtBOa,G,MAFH,kBAAM,cAAC,EAAD,MCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e0764baf.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst style = {\r\n    background: 'lightblue',\r\n    border: '2px solid darkblue',\r\n    fontSize: '30px',\r\n    fontWeight: '800',\r\n    cursor: 'pointer',\r\n    outline: 'none',\r\n};\r\n\r\nconst Square = ({ value, onClick }) => (\r\n    <button style={style} onClick={onClick}>\r\n        {value}\r\n    </button>\r\n);\r\n\r\nexport default Square;","import React from 'react';\r\nimport Square from './Square';\r\n\r\nconst style = {\r\n    border: '4px solid darkblue',\r\n    borderRadius: '10px',\r\n    height: '250px',\r\n    width: '250px',\r\n    margin: '0 auto',\r\n    display: 'grid',\r\n    gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)',\r\n};\r\n\r\nconst Board = ({ squares, onClick }) => (\r\n    <div style={style}>\r\n        {\r\n            squares.map((square, i) => (\r\n                <Square key={i} value={square} onClick={() => onClick(i)} />\r\n            ))\r\n        }\r\n    </div>\r\n);\r\n\r\nexport default Board;\r\n","import React, { useState } from 'react';\r\nimport Board from './Board';\r\nimport { calculateWinner } from '../helpers';\r\n\r\nconst style = {\r\n    width: '200px',\r\n    margin: '20px auto',\r\n};\r\n\r\nconst Game = () => {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const winner = calculateWinner(board);\r\n\r\n    const handleClick = (i) => {\r\n        if (winner || board[i]) return;\r\n        \r\n        setBoard([\r\n            ...board.slice(0, i),\r\n            xIsNext ? 'X' : 'O',\r\n            ...board.slice(i + 1),\r\n        ]);\r\n\r\n        setXIsNext(!xIsNext);\r\n    }\r\n    \r\n    const renderMoves = () => (\r\n        <button onClick={() => setBoard(Array(9).fill(null))}>\r\n            Start Game\r\n        </button>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Board squares={board} onClick={handleClick} />\r\n            <div style={style}>\r\n                <p>{winner ? 'Winner: ' + winner : 'Next Player: ' + (xIsNext ? 'X' : 'O')}</p>\r\n                {renderMoves()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Game;","export function calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}","import Game from './components/Game';\r\nimport './App.css';\r\n\r\nconst App = () => <Game />\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}